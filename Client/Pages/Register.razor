@page "/register"
@layout EmptyLayout
@inject AuthService authService
@inject NavigationManager navigationManager

<PageTitle>Endava .NET Tech Course</PageTitle>

<MudGrid Class="justify-md-center">
    <MudItem sm="5">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Inregistrare</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="justify-md-center ">
                <MudTextField @bind-Value="newUser.FirstName" T="string" Label="Nume" />
                <MudTextField @bind-Value="newUser.LastName" T="string" Label="Prenume" />
                <MudTextField @bind-Value="newUser.Username" T="string" Label="Nume de utilizator" />
                <MudTextField @bind-Value="newUser.Email" T="string" Label="Email" />
                <MudTextField @bind-Value="newUser.Password" T="string" Label="Parola" InputType="InputType.Password" />
            </MudCardContent>
        </MudCard>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" OnClick="RegisterNewUser" Color="Color.Secondary" DisableElevation="true" Class="mx-2">Inregistrare</MudButton>
            <MudButton Href="/login" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true">Autentificare</MudButton>
            <MudButton Href="/" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" Class="mx-2">Acasa</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    RegisterDto newUser = new();
    string registerError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var isAuthenticated = await authService.IsUserauthenticated();

        if (isAuthenticated)
            navigationManager.NavigateTo("");
    }

    public async Task RegisterNewUser()
    {
        var result = await authService.Register(newUser);

        if(result.Status)
            navigationManager.NavigateTo("");

        registerError = result.Message;
        StateHasChanged();
    }
}
